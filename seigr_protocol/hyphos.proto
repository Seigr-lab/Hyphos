syntax = "proto3";

package seigr.hyphos;

// Hyphos: The Seigr-native programming language
// 100% senary-optimized, energy-aware, protocol-first language

// Hyphos language constructs and types
enum HyphosDataType {
    HYPHOS_UNKNOWN = 0;
    SENARY_INT = 1;          // Native senary integer
    SENARY_FLOAT = 2;        // Native senary floating point
    ENERGY_UNIT = 3;         // Energy measurement type
    PROTOCOL_MESSAGE = 4;    // Protocol message type
    TEMPORAL_VALUE = 5;      // Timestamp/temporal type
    NEURAL_PATTERN = 10;     // Neural interface pattern
    QUANTUM_STATE = 11;      // Quantum computing state
    BIOMIMETIC_SIGNAL = 12;  // Biological signal representation
    HYPHOS_FUNCTION = 13;    // Function/method reference
    HYPHOS_OBJECT = 14;      // Object/class instance
    HYPHOS_STREAM = 15;      // Data stream
}

// Hyphos language operators (senary-optimized)
enum HyphosOperator {
    OP_UNKNOWN = 0;
    
    // Arithmetic (senary-native)
    SENARY_ADD = 1;
    SENARY_SUBTRACT = 2;
    SENARY_MULTIPLY = 3;
    SENARY_DIVIDE = 4;
    SENARY_MODULO = 5;
    
    // Energy-aware operations
    ENERGY_CONSUME = 10;
    ENERGY_GENERATE = 11;
    ENERGY_OPTIMIZE = 12;
    ENERGY_BALANCE = 13;
    
    // Protocol operations
    PROTOCOL_SEND = 20;
    PROTOCOL_RECEIVE = 21;
    PROTOCOL_VALIDATE = 22;
    PROTOCOL_TRANSFORM = 23;
    
    // Temporal operations
    TEMPORAL_NOW = 30;
    TEMPORAL_DELTA = 31;
    TEMPORAL_SYNC = 32;
    
    // Neural operations
    NEURAL_PROCESS = 40;
    NEURAL_LEARN = 41;
    NEURAL_ADAPT = 42;
    
    // Quantum operations
    QUANTUM_SUPERPOSE = 50;
    QUANTUM_ENTANGLE = 51;
    QUANTUM_MEASURE = 52;
}

// Hyphos expression/statement
message HyphosExpression {
    string expression_id = 1;
    string expression_type = 2; // "literal", "variable", "operation", "function_call"
    
    // Expression content
    HyphosDataType data_type = 3;
    string value = 4;           // Literal value or variable name
    HyphosOperator operator = 5; // If operation
    repeated HyphosExpression operands = 6; // For complex expressions
    
    // Function call specifics
    string function_name = 7;
    repeated HyphosExpression arguments = 8;
    
    // Energy and optimization
    float estimated_energy_cost = 9;
    bool senary_optimized = 10;
    string optimization_hint = 11;
    
    // Source location
    int32 line_number = 12;
    int32 column_number = 13;
    string source_file = 14;
}

// Hyphos function definition
message HyphosFunction {
    string function_name = 1;
    string function_id = 2;
    repeated string parameter_names = 3;
    repeated HyphosDataType parameter_types = 4;
    HyphosDataType return_type = 5;
    
    // Function body
    repeated HyphosExpression body_expressions = 6;
    
    // Function characteristics
    bool pure_function = 7;        // No side effects
    bool energy_aware = 8;         // Considers energy consumption
    bool protocol_safe = 9;        // Safe for protocol operations
    bool senary_optimized = 10;    // Optimized for senary operations
    
    // Performance metadata
    float estimated_energy_cost = 11;
    int32 estimated_execution_time_ms = 12;
    string optimization_level = 13;
    
    // Documentation
    string description = 14;
    repeated string examples = 15;
    map<string, string> metadata = 16;
}

// Hyphos class/object definition
message HyphosClass {
    string class_name = 1;
    string class_id = 2;
    string parent_class = 3;    // Inheritance
    
    // Class members
    repeated HyphosVariable member_variables = 4;
    repeated HyphosFunction member_functions = 5;
    
    // Protocol interface
    repeated string implemented_protocols = 6;
    bool protocol_compliant = 7;
    
    // Energy characteristics
    float instantiation_energy_cost = 8;
    bool energy_adaptive = 9;
    string energy_profile = 10;
    
    // Optimization
    bool senary_optimized = 11;
    string optimization_strategy = 12;
    
    // Class metadata
    string description = 13;
    string author = 14;
    string version = 15;
    map<string, string> annotations = 16;
}

// Hyphos variable declaration
message HyphosVariable {
    string variable_name = 1;
    HyphosDataType data_type = 2;
    string initial_value = 3;
    
    // Variable properties
    bool constant = 4;
    bool energy_tracked = 5;     // Track energy consumption of operations
    bool protocol_safe = 6;      // Safe to send via protocols
    bool senary_native = 7;      // Native senary representation
    
    // Scope and lifetime
    string scope = 8;            // "local", "class", "global", "protocol"
    string lifetime = 9;         // "temporary", "session", "persistent"
    
    // Optimization hints
    string optimization_hint = 10;
    bool cache_eligible = 11;
    
    // Metadata
    string description = 12;
    map<string, string> annotations = 13;
}

// Hyphos compilation unit (module/file)
message HyphosModule {
    string module_name = 1;
    string module_path = 2;
    string version = 3;
    
    // Module contents
    repeated string imports = 4;
    repeated HyphosClass classes = 5;
    repeated HyphosFunction functions = 6;
    repeated HyphosVariable global_variables = 7;
    
    // Module characteristics
    bool protocol_module = 8;     // Contains protocol definitions
    bool energy_critical = 9;     // Critical for energy optimization
    bool senary_native = 10;      // Fully senary-optimized
    bool neural_compatible = 11;  // Compatible with neural interfaces
    
    // Compilation metadata
    string compilation_timestamp = 12;
    string compiler_version = 13;
    repeated string compilation_flags = 14;
    
    // Dependencies
    repeated string dependencies = 15;
    repeated string protocol_dependencies = 16;
    
    // Performance characteristics
    float estimated_load_time_ms = 17;
    float estimated_energy_cost = 18;
    string optimization_level = 19;
    
    // Documentation
    string description = 20;
    string license = 21;
    string author = 22;
    map<string, string> metadata = 23;
}

// Hyphos compilation request
message HyphosCompilationRequest {
    string source_code = 1;
    string source_file_path = 2;
    string target_platform = 3;  // "seigr_native", "neural_interface", "quantum_hybrid"
    
    // Compilation options
    string optimization_level = 4; // "energy_minimal", "performance", "balanced", "senary_optimized"
    bool enable_senary_optimization = 5;
    bool enable_energy_tracking = 6;
    bool enable_protocol_validation = 7;
    bool enable_neural_compatibility = 8;
    
    // Resource constraints
    float max_compilation_energy = 9;
    int32 max_compilation_time_ms = 10;
    
    // Output preferences
    string output_format = 11;    // "bytecode", "native", "protocol_stream"
    bool include_debug_info = 12;
    bool include_energy_profile = 13;
    
    // Dependencies
    repeated string library_paths = 14;
    repeated string protocol_imports = 15;
    
    // Compilation metadata
    string requester_id = 16;
    string compilation_context = 17;
    map<string, string> custom_flags = 18;
}

// Hyphos compilation response
message HyphosCompilationResponse {
    bool success = 1;
    string error_message = 2;
    repeated string warnings = 3;
    
    // Compiled output
    bytes compiled_bytecode = 4;
    string bytecode_format = 5;
    HyphosModule compiled_module = 6;
    
    // Compilation statistics
    int32 compilation_time_ms = 7;
    float energy_consumed = 8;
    int32 lines_compiled = 9;
    int32 functions_compiled = 10;
    int32 classes_compiled = 11;
    
    // Optimization results
    bool senary_optimized = 12;
    float optimization_efficiency = 13;
    string optimization_report = 14;
    
    // Performance predictions
    float estimated_runtime_energy = 15;
    int32 estimated_execution_time_ms = 16;
    string performance_profile = 17;
    
    // Output metadata
    string compilation_timestamp = 18;
    string compiler_version = 19;
    map<string, string> metadata = 20;
}

// Hyphos runtime execution request
message HyphosExecutionRequest {
    bytes bytecode = 1;
    string execution_context = 2; // "standalone", "protocol_service", "neural_interface"
    
    // Execution parameters
    repeated string input_arguments = 3;
    map<string, string> environment_variables = 4;
    
    // Resource constraints
    float max_energy_consumption = 5;
    int32 max_execution_time_ms = 6;
    int32 max_memory_usage_mb = 7;
    
    // Execution preferences
    bool enable_energy_monitoring = 8;
    bool enable_senary_optimization = 9;
    bool enable_protocol_integration = 10;
    string optimization_strategy = 11;
    
    // Security and isolation
    string security_context = 12;
    repeated string allowed_protocols = 13;
    bool sandboxed_execution = 14;
    
    // Execution metadata
    string requester_id = 15;
    string session_id = 16;
    map<string, string> execution_flags = 17;
}

// Hyphos runtime execution response
message HyphosExecutionResponse {
    bool success = 1;
    string error_message = 2;
    
    // Execution results
    string output_data = 3;
    string return_value = 4;
    int32 exit_code = 5;
    
    // Performance metrics
    int32 execution_time_ms = 6;
    float energy_consumed = 7;
    int32 memory_used_mb = 8;
    int32 cpu_cycles = 9;
    
    // Optimization results
    bool senary_optimized = 10;
    float optimization_efficiency = 11;
    string optimization_report = 12;
    
    // Protocol interactions
    int32 protocol_messages_sent = 13;
    int32 protocol_messages_received = 14;
    repeated string protocols_used = 15;
    
    // Execution metadata
    string execution_timestamp = 16;
    string runtime_version = 17;
    map<string, string> metadata = 18;
}

// Hyphos language service definitions
service HyphosLanguageService {
    // Compilation services
    rpc CompileSource(HyphosCompilationRequest) returns (HyphosCompilationResponse);
    rpc ValidateModule(HyphosModule) returns (HyphosCompilationResponse);
    rpc OptimizeForSenary(HyphosModule) returns (HyphosModule);
    
    // Execution services
    rpc ExecuteBytecode(HyphosExecutionRequest) returns (HyphosExecutionResponse);
    rpc ExecuteFunction(HyphosFunction) returns (HyphosExecutionResponse);
    
    // Language analysis
    rpc AnalyzeEnergyConsumption(HyphosModule) returns (HyphosCompilationResponse);
    rpc CheckProtocolCompliance(HyphosModule) returns (HyphosCompilationResponse);
    rpc ValidateSenaryOptimization(HyphosModule) returns (HyphosCompilationResponse);
    
    // Development tools
    rpc FormatCode(HyphosCompilationRequest) returns (HyphosCompilationResponse);
    rpc GenerateDocumentation(HyphosModule) returns (HyphosCompilationResponse);
    rpc ProfilePerformance(HyphosExecutionRequest) returns (HyphosExecutionResponse);
}
