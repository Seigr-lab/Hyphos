syntax = "proto3";

package hyphos.awareness;

import "hyphos/base_modules/consciousness_operations.hyph";
import "hyphos/base_modules/bio_digital_operations.hyph";
import "hyphos/base_modules/senary_mathematics.hyph";
import "hyphos/base_modules/energy_operations.hyph";
import "hyphos/base_modules/protocol_integration.hyph";
import "seigr_math.proto";
import "seigr_timestamp.proto";

// Awareness operation types (senary-mapped 0-5)
enum AwarenessOperation {
    AWARENESS_UNKNOWN = 0;
    CREATE = 1;
    PROCESS = 2;
    VALIDATE = 3;
    OPTIMIZE = 4;
    INTEGRATE = 5;
}

// Awareness processing states (senary-mapped 0-5)
enum AwarenessProcessingState {
    STATE_IDLE = 0;
    STATE_ACTIVE = 1;
    STATE_PROCESSING = 2;
    STATE_OPTIMIZING = 3;
    STATE_INTEGRATING = 4;
    STATE_COMPLETE = 5;
}

// Awareness data types (senary-mapped 0-5)
enum AwarenessDataType {
    DATA_UNKNOWN = 0;
    DATA_INPUT = 1;
    DATA_OUTPUT = 2;
    DATA_INTERMEDIATE = 3;
    DATA_METADATA = 4;
    DATA_RESULT = 5;
}

// Core awareness messages
message AwarenessObject {
    string object_id = 1;
    AwarenessDataType data_type = 2;
    SenaryArray data_payload = 3;
    AwarenessProcessingState state = 4;
    SenaryTimestamp created_at = 5;
}

message AwarenessRequest {
    AwarenessOperation operation = 1;
    AwarenessObject target_object = 2;
    SenaryArray parameters = 3;
    AwarenessProcessingState desired_state = 4;
    SenaryTimestamp timestamp = 5;
}

message AwarenessResponse {
    bool success = 1;
    AwarenessObject result_object = 2;
    SenaryArray result_data = 3;
    AwarenessProcessingState new_state = 4;
    string error_message = 5;
}

// Awareness service definition
service AwarenessService {
    rpc Create(AwarenessRequest) returns (AwarenessResponse);
    rpc Process(AwarenessRequest) returns (AwarenessResponse);
    rpc Validate(AwarenessRequest) returns (AwarenessResponse);
    rpc Optimize(AwarenessRequest) returns (AwarenessResponse);
    rpc Integrate(AwarenessRequest) returns (AwarenessResponse);
}
